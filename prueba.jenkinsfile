def genaralvars () {

    env.GIT_REPO = 'https://github.com/010278Francisco/Prueba.git'       
    env.GIT_BRANCH = 'main'         
    env.DOCKER_REPO = 'francisco012'
    CONTAINER_PORT= '83'

}

pipeline {
    agent any
    tools {
       terraform 'terraform-2'
    }
    stages {
        stage ("Set Variables") {
            steps {
                genaralvars()
            }
        }



 stage ("Verify If Infra exists") {
            steps {
                    script {
                        if (fileExists('terraform.tfstate')) {
                            withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-francisco', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]){
                                sh "terraform destroy --auto-approve"
                               
                            }
                        }
                        else {
                            sh "echo no existe tfstate"
                        }
                }
            }
        }
        
        
        stage('terraform format check') {
            steps{
                sh 'terraform fmt'
            }
        }
        stage('terraform Init') {
            steps{
                sh 'terraform init'
            }
        }
         stage('terraform apply') {
            steps{
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-francisco', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]){
                    sh 'terraform apply --auto-approve'
                    
                }
                script {
                    PUBLIC_IP_EC2 = sh (script: "terraform output instance_public_ip", returnStdout:true).trim()
                }
                echo "${PUBLIC_IP_EC2}"
            }
        }
        }
        }
